<?xml version="1.0" encoding="UTF-8"?>
<!-- The above is a default, but its inclusion should be everywhere just to indicate that all files, for our purposes, are UTF-8 encoded.  Also, as a reminder, the less than, greater than, ampersand, apostrophe, and quotation mark are invalid XML and must be replaced with the literal text &lt; &gt; &amp; &apos; &quot; with the semicolons -->
<core_data>
  <igBuildingKind name="Watchtower">
    <Encyclopedia_Entry>
	  <full_path>Buildings/Watchtower</full_path>
	  <body_text>Monsters assigned to a Watchtower will muster here when battle begins.</body_text><!-- in order to prevent the encyclopedia entry from being visible, we set the body text to empty -->
	  <image_SS></image_SS>
	  <related_entries_full_paths>
	  <!-- nothing in this list of entries -->
	  </related_entries_full_paths>
	</Encyclopedia_Entry>
	<mBuildingKindQualities>0x3</mBuildingKindQualities><!-- 0x1 = underwater enable, 0x2 = overwater enable -->
	<mWidth>1</mWidth>
    <mHeight>1</mHeight>

	<mPopDaysToBuild>3</mPopDaysToBuild> <!-- values below 1 will be treated as 1 -->
	<mBaseDurability>150</mBaseDurability>
	
	<mResourceCombinationsToBuild> <!-- this is a list of lists.  The inner list elements are pairs of Resource, double quantity.  If nothing exists, this building does not require any resources to build.  If one entry has a sum quantity of 0, then this building can be built with resources or not. -->
		<i1>
			<i1>
				<a>TAG:hard construction</a>
				<b>55</b>
			</i1>
		</i1>
	</mResourceCombinationsToBuild>
	
	<mOutputMultBasedOnConstructionResources>
	</mOutputMultBasedOnConstructionResources>
	
	<mDurabilityMultBasedOnConstructionResources>
	  <i1>
	    <a>TAG:woody</a>
		<b>1.25</b>
	  </i1>
	  <i1>
	    <a>TAG:stony</a>
		<b>2.5</b>
	  </i1>
	  <i1>
	    <a>TAG:metallic</a>
		<b>1.75</b>
	  </i1>
	</mDurabilityMultBasedOnConstructionResources>
	
	<mBeautyValue>-5</mBeautyValue>
	<mBeautyRadius>5</mBeautyRadius>
    <mBeautySynergyBuildings><!-- basic list of names -->
	</mBeautySynergyBuildings>
	
    <mSSIDs>
		<i>Watchtower</i>
	</mSSIDs>
	
	<mMusteringType>0x1</mMusteringType><!-- 0 = disabled, 1 = during a real battle pops are mustered, 2 = pops immediately muster at this building if it is their muster point -->
	<mScriptCalledDaily></mScriptCalledDaily> <!-- exactly what it says on the tin: if this building is fully constructed, this script is called daily.  First input is the building itself. -->
	<mScriptCalledBetweenOutputCalculationAndResolution></mScriptCalledBetweenOutputCalculationAndResolution>  <!-- if this building is a workplace, this script is called when the building has produced a non-zero quantity/quality of output, but before it has resolved the output into service quality for surrounding buildings or a resource addition to the resource pool.  This script can also be called at other times by, for example, menus, to try to predict what a workplace's output is going to be, but such calls will always have the fourth input set to "true".  First input is the building, second is quantity (of actual resource, not internal calculation), third is quality (of actual resource/service, not internal calculation), fourth is a bool that indicates "are we calling this script solely for predictive purposes" which is false if input resources are being consumed and output is actually being produced, fifth is a Dictionary of IFResource,double which is used instead of the (double quantity) if and only if this building extracts goods from the land.  Return value is a List of objects of size 4 holding quantity/quality/prediction text/dictionary of IFResource,double (double/double/string/Dictionary&lt;IFResource,double&gt;) in that order, but the script can obviously keep the first two (and last dictionary) the same and do other things if necessary.  If prediction text is the empty string "", then default empty string logic takes over (goods/services autogenerated text), otherwise the prediction text is printed as is. -->
	
	<mIsHousing>0</mIsHousing> <!-- bool, true if nonzero -->
	<mIsWorkplace>0</mIsWorkplace> <!-- bool, true if nonzero -->
	<mTagList>
	  <!-- description tags: -->
	  <i1>description_shape_top_noun:roof tiles</i1>
	  <i1>description_shape_side_noun:tall walls</i1>
	  <i1>description_shape_middle_noun:stairs</i1>
	  <i1>description_shape_bottom_noun:gates</i1>
	</mTagList>
  </igBuildingKind>
  
</core_data>